// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBeltTestingProgram.Data;

namespace MyBeltTestingProgram.Migrations
{
    [DbContext(typeof(MyBeltTestingDBContext))]
    [Migration("20190413113453_InitialDB")]
    partial class InitialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyBeltTestingProgram.Models.Combination", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Index");

                    b.HasKey("ID");

                    b.ToTable("Combinations");
                });

            modelBuilder.Entity("MyBeltTestingProgram.Models.Motion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CombinationID");

                    b.Property<int?>("MoveID");

                    b.Property<int?>("StanceID");

                    b.Property<int?>("TechniqueID");

                    b.HasKey("ID");

                    b.HasIndex("CombinationID");

                    b.HasIndex("MoveID");

                    b.HasIndex("StanceID");

                    b.HasIndex("TechniqueID");

                    b.ToTable("Motions");
                });

            modelBuilder.Entity("MyBeltTestingProgram.Models.Move", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Symbol");

                    b.HasKey("ID");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("MyBeltTestingProgram.Models.Stance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Symbol");

                    b.HasKey("ID");

                    b.ToTable("Stances");
                });

            modelBuilder.Entity("MyBeltTestingProgram.Models.Technique", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Annotation");

                    b.Property<string>("Name");

                    b.Property<int>("Purpose");

                    b.Property<int>("Weapon");

                    b.HasKey("ID");

                    b.ToTable("Techniques");
                });

            modelBuilder.Entity("MyBeltTestingProgram.Models.Motion", b =>
                {
                    b.HasOne("MyBeltTestingProgram.Models.Combination")
                        .WithMany("Motions")
                        .HasForeignKey("CombinationID");

                    b.HasOne("MyBeltTestingProgram.Models.Move", "Move")
                        .WithMany()
                        .HasForeignKey("MoveID");

                    b.HasOne("MyBeltTestingProgram.Models.Stance", "Stance")
                        .WithMany()
                        .HasForeignKey("StanceID");

                    b.HasOne("MyBeltTestingProgram.Models.Technique", "Technique")
                        .WithMany()
                        .HasForeignKey("TechniqueID");
                });
#pragma warning restore 612, 618
        }
    }
}
